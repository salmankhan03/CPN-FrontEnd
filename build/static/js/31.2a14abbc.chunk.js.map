{"version":3,"sources":["assets/img/create-account-office.jpeg","assets/img/create-account-office-dark.jpeg","pages/SignUp.js","components/form/Error.js","components/form/LabelArea.js","services/AdminServices.js","components/form/InputArea.js","hooks/useLoginSubmit.js","components/form/SelectRole.js","services/httpService.js"],"names":["SignUp","t","useTranslation","onSubmit","register","handleSubmit","errors","loading","setPhoneValue","useLoginSubmit","className","src","ImageLight","alt","ImageDark","LabelArea","label","InputArea","name","type","placeholder","Error","errorName","email","password","country","onChange","value","phone","check","disabled","to","block","message","AdminServices","registerAdmin","async","requests","post","body","loginAdmin","forgetPassword","resetPassword","put","signUpWithProvider","addStaff","getAllStaff","get","getStaffById","id","updateStaff","updateStaffStatus","deleteStaff","delete","defaultValue","required","setLoading","useState","dispatch","useContext","AdminContext","history","useHistory","location","useLocation","formState","useForm","verifyEmail","role","pathname","then","res","notifySuccess","payload","Cookies","set","JSON","stringify","expires","replace","catch","err","notifyError","response","data","SelectRole","setRole","e","target","hidden","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","adminInfo","company","parse","authorization","token","responseBody","url","patch"],"mappings":"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","file":"static/js/31.2a14abbc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/create-account-office.080280cb.jpeg\";","export default __webpack_public_path__ + \"static/media/create-account-office-dark.080280cb.jpeg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input, Label, Button } from \"@windmill/react-ui\";\r\nimport { ImFacebook, ImGoogle } from \"react-icons/im\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Error from \"components/form/Error\";\r\nimport InputArea from \"components/form/InputArea\";\r\nimport LabelArea from \"components/form/LabelArea\";\r\nimport SelectRole from \"components/form/SelectRole\";\r\nimport useLoginSubmit from \"hooks/useLoginSubmit\";\r\nimport ImageLight from \"assets/img/create-account-office.jpeg\";\r\nimport ImageDark from \"assets/img/create-account-office-dark.jpeg\";\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\n\r\nconst SignUp = () => {\r\n  const {t}=useTranslation()\r\n  const { onSubmit, register, handleSubmit, errors, loading, setPhoneValue } = useLoginSubmit();\r\n\r\n  const handlePhoneChange = (value) => {\r\n    setPhoneValue(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n          <div className=\"h-32 md:h-auto md:w-1/2\">\r\n            <img\r\n              aria-hidden=\"true\"\r\n              className=\"object-cover w-full h-full dark:hidden\"\r\n              src={ImageLight}\r\n              alt=\"Office\"\r\n            />\r\n            <img\r\n              aria-hidden=\"true\"\r\n              className=\"hidden object-cover w-full h-full dark:block\"\r\n              src={ImageDark}\r\n              alt=\"Office\"\r\n            />\r\n          </div>\r\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n            <div className=\"w-full\">\r\n              <h1 className=\"mb-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\r\n                {t(\"CreateAccount\")}\r\n              </h1>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <LabelArea label=\"Name\" />\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Admin\"\r\n                />\r\n                <Error errorName={errors.name} />\r\n                <LabelArea label=\"Email\" />\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"john@doe.com\"\r\n                />\r\n                <Error errorName={errors.email} />\r\n\r\n                <LabelArea label=\"Password\" />\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"***************\"\r\n                />\r\n                <Error errorName={errors.password} />\r\n\r\n                <LabelArea label=\"Phone Number\" />\r\n                <div className=\"col-span-8 sm:col-span-4\">\r\n                  <PhoneInput\r\n                      country={'ca'}\r\n                      onChange={handlePhoneChange}\r\n                      className={'signUpPhoneInput'}\r\n                  />\r\n                  <Error errorName={errors.phone} />\r\n                </div>\r\n\r\n                {/*<LabelArea label=\"Staff Role\" />*/}\r\n                {/*<div className=\"col-span-8 sm:col-span-4\">*/}\r\n                {/*  <SelectRole register={register} label=\"Role\" name=\"role\" />*/}\r\n                {/*  <Error errorName={errors.role} />*/}\r\n                {/*</div>*/}\r\n\r\n                <Label className=\"mt-6\" check>\r\n                  <Input type=\"checkbox\" />\r\n                  <span className=\"ml-2\">\r\n                    {t(\"Iagree\")} <span className=\"underline\">{t(\"privacyPolicy\")}</span>\r\n                  </span>\r\n                </Label>\r\n\r\n                <Button\r\n                  disabled={loading}\r\n                  type=\"submit\"\r\n                  className=\"mt-4 h-12 w-full\"\r\n                  to=\"/dashboard\"\r\n                  block\r\n                >\r\n                  {t(\"CreateAccountTitle\")}\r\n                </Button>\r\n              </form>\r\n\r\n              <hr className=\"my-10\" />\r\n\r\n              {/*<button*/}\r\n              {/*  disabled*/}\r\n              {/*  className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2 md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-blue-600 h-11 md:h-12 w-full mr-2\"*/}\r\n              {/*>*/}\r\n              {/*  <ImFacebook className=\"w-4 h-4 mr-2\" /> <span className=\"ml-2\"> {t(\"LoginWithFacebook\")} </span>*/}\r\n              {/*</button>*/}\r\n              {/*<button*/}\r\n              {/*  disabled*/}\r\n              {/*  className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2  md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-red-500 h-11 md:h-12 w-full\"*/}\r\n              {/*>*/}\r\n              {/*  <ImGoogle className=\"w-4 h-4 mr-2\" /> <span className=\"ml-2\">{t(\"LoginWithGoogle\")}</span>*/}\r\n              {/*</button>*/}\r\n\r\n              <p className=\"mt-4\">\r\n                <Link\r\n                  className=\"text-sm font-medium text-green-500 dark:text-green-400 hover:underline\"\r\n                  to=\"/login\"\r\n                >\r\n                 {t(\"AlreadyAccount\")}\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import requests from \"./httpService\";\r\n\r\nconst AdminServices = {\r\n  registerAdmin: async (body) => {\r\n    return requests.post(\"/signup\", body);\r\n  },\r\n\r\n  loginAdmin: async (body) => {\r\n    return requests.post(`/login`, body);\r\n  },\r\n\r\n  forgetPassword: async (body) => {\r\n    return requests.post(\"/forget-password\", body);\r\n  },\r\n\r\n  resetPassword: async (body) => {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n\r\n  signUpWithProvider: async (body) => {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n\r\n  addStaff: async (body) => {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff: async (body) => {\r\n    return requests.get(\"/admin\", body);\r\n  },\r\n  getStaffById: async (id, body) => {\r\n    return requests.post(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaff: async (id, body) => {\r\n    return requests.put(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaffStatus: async (id, body) => {\r\n    return requests.put(`/admin/update-status/${id}`, body);\r\n  },\r\n\r\n  deleteStaff: async (id) => {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\n\r\nexport default AdminServices;\r\n","import React from \"react\";\r\nimport { Input } from \"@windmill/react-ui\";\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import Cookies from 'js-cookie';\r\nimport { useContext, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { AdminContext } from 'context/AdminContext';\r\nimport AdminServices from 'services/AdminServices';\r\nimport { notifyError, notifySuccess } from 'utils/toast';\r\n\r\nconst useLoginSubmit = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { dispatch } = useContext(AdminContext);\r\n  const history = useHistory();\r\n  const [phone, setPhoneValue] = useState('');\r\n  const location = useLocation();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\r\n    setLoading(true);\r\n    const cookieTimeOut = 1000;\r\n\r\n    if (location.pathname === '/login') {\r\n      AdminServices.loginAdmin({ email, password })\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoading(false);\r\n            notifySuccess('Login Success!');\r\n            dispatch({ type: 'USER_LOGIN', payload: res });\r\n            Cookies.set('adminInfo', JSON.stringify(res), {\r\n              expires: cookieTimeOut,\r\n            });\r\n            history.replace('/');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err ? err.response.data.message : err.message);\r\n          setLoading(false);\r\n        });\r\n    }\r\n\r\n    if (location.pathname === '/signup') {\r\n      AdminServices.registerAdmin({ name, email, password, phone })\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoading(false);\r\n            notifySuccess('Register Success!');\r\n            dispatch({ type: 'USER_LOGIN', payload: res });\r\n            Cookies.set('adminInfo', JSON.stringify(res), {\r\n              expires: cookieTimeOut,\r\n            });\r\n            history.replace('/');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err ? err.response.data.message : err.message);\r\n          setLoading(false);\r\n        });\r\n    }\r\n\r\n    if (location.pathname === '/forgot-password') {\r\n      AdminServices.forgetPassword({ email: verifyEmail })\r\n        .then((res) => {\r\n          setLoading(false);\r\n          notifySuccess(res.message);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          notifyError(err ? err.response.data.message : err.message);\r\n        });\r\n    }\r\n  };\r\n  return {\r\n    onSubmit,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    loading,\r\n    setPhoneValue\r\n  };\r\n};\r\n\r\nexport default useLoginSubmit;\r\n","import React from 'react';\r\nimport { Select } from '@windmill/react-ui';\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Staff role\r\n        </option>\r\n        <option value=\"Admin\">Admin</option>\r\n        <option value=\"CEO\">CEO</option>\r\n        <option value=\"Manager\">Manager</option>\r\n        <option value=\"Accountant\">Accountant</option>\r\n        <option value=\"Driver\"> Driver </option>\r\n        <option value=\"Security Guard\">Security Guard</option>\r\n        <option value=\"Deliver Person\">Delivery Person</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst instance = axios.create({\r\n  baseURL: `https://backend.canadasentinel.ca/api`,\r\n  timeout: 50000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get('adminInfo')) {\r\n    adminInfo = JSON.parse(Cookies.get('adminInfo'));\r\n  }\r\n\r\n  let company;\r\n\r\n  if (Cookies.get('company')) {\r\n    company = Cookies.get('company');\r\n  }\r\n\r\n  // console.log('Admin Http Services Cookie Read : ' + company);\r\n  // let companyName = JSON.stringify(company);\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n      company: company ? company : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url, body) => instance.delete(url, body).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n"],"sourceRoot":""}