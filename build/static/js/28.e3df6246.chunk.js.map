{"version":3,"sources":["hooks/useAsync.js","services/ProductServices.js","components/common/PageTitle.js","pages/EditProfile.js","services/SettingServices.js","components/form/Error.js","components/form/LabelArea.js","services/AdminServices.js","components/form/InputArea.js","components/image-uploader/ItemTypes.js","components/image-uploader/Card.js","components/image-uploader/Container.js","components/image-uploader/Uploader.js","components/form/SelectRole.js","hooks/useStaffSubmit.js","services/httpService.js"],"names":["useAsync","asyncFunction","data","setData","useState","error","setError","loading","setLoading","isUpdate","setIsUpdate","currentPage","category","searchText","invoice","status","zone","time","sortedField","source","limitData","startDate","endDate","useContext","SidebarContext","useEffect","unmounted","axios","CancelToken","res","cancelToken","token","err","message","isCancel","cancel","ProductServices","getAllProducts","async","page","limit","title","price","_ref","body","requests","post","getProductById","get","id","addProduct","addAllProducts","updateProduct","updateManyProducts","patch","updateStatus","put","deleteProduct","delete","deleteManyProducts","PageTitle","description","_jsxs","Helmet","children","_jsx","name","content","EditProfile","t","useTranslation","state","adminInfo","AdminContext","register","handleSubmit","onSubmit","errors","imageUrl","setImageUrl","useStaffSubmit","_id","_Fragment","className","LabelArea","label","Uploader","folder","InputArea","type","placeholder","Error","errorName","email","phone","SelectRole","role","Button","SettingServices","addGlobalSetting","getGlobalSetting","updateGlobalSetting","removeMultiDeleteMedia","Label","AdminServices","registerAdmin","loginAdmin","forgetPassword","resetPassword","signUpWithProvider","addStaff","getAllStaff","getStaffById","updateStaff","updateStaffStatus","deleteStaff","defaultValue","required","min","max","Input","ItemTypes","Card","image","index","moveCard","handleRemoveImage","ref","useRef","handlerId","drop","useDrop","accept","collect","monitor","getHandlerId","hover","item","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drag","useDrag","isDragging","src","preview","alt","onClick","FiXCircle","Container","useCallback","prevCards","update","$splice","renderCard","card","i","text","map","cloudinary","config","cloud_name","process","REACT_APP_CLOUD_NAME","api_key","REACT_APP_CLOUDINARY_API_KEY","api_secret","REACT_APP_CLOUDINARY_API_SECRET","product","method","files","setFiles","selectedImages","setSelectedImages","productsDetails","setProductsDetails","globalSetting","console","fetchData","getRootProps","getInputProps","fileRejections","useDropzone","multiple","maxSize","maxFiles","number_of_image_per_product","onDrop","acceptedFiles","file","Object","assign","URL","createObjectURL","log","element","imgUrl","thumbs","forEach","revokeObjectURL","_productsDetails$imag","images","findIndex","x","img","updatedImageUrl","splice","FormData","append","notifyError","status_code","result","FiUploadCloud","DndProvider","backend","HTML5Backend","setRole","Select","onChange","e","target","value","hidden","isDrawerOpen","closeDrawer","lang","selectedDate","setSelectedDate","dayjs","Date","format","language","setLanguage","resData","setResData","isSubmitting","setIsSubmitting","location","useLocation","setValue","clearErrors","formState","useForm","getStaffData","joiningData","_err$response2","_err$response2$data","response","pathname","Cookies","staffData","password","joiningDate","notifySuccess","_err$response","_err$response$data","handleSelectLanguage","keys","length","instance","create","baseURL","timeout","headers","Accept","interceptors","request","use","company","JSON","parse","authorization","responseBody","url","then"],"mappings":"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","file":"static/js/28.e3df6246.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// import Cookies from 'js-cookie';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { SidebarContext } from \"context/SidebarContext\";\r\n\r\nconst useAsync = (asyncFunction) => {\r\n  const [data, setData] = useState([] || {});\r\n  const [error, setError] = useState(\"\");\r\n  // const [errCode, setErrCode] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const {\r\n    isUpdate,\r\n    setIsUpdate,\r\n    currentPage,\r\n    category,\r\n    searchText,\r\n    invoice,\r\n    status,\r\n    zone,\r\n    time,\r\n    sortedField,\r\n    source,\r\n    limitData,\r\n    startDate,\r\n    endDate,\r\n  } = useContext(SidebarContext);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = axios.CancelToken.source();\r\n    (async () => {\r\n      try {\r\n        const res = await asyncFunction({ cancelToken: source.token });\r\n        if (!unmounted) {\r\n          setData(res);\r\n          setError(\"\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        if (!unmounted) {\r\n          setError(err.message);\r\n          if (axios.isCancel(err)) {\r\n            setError(err.message);\r\n            setLoading(false);\r\n            setData([]);\r\n          } else {\r\n            setError(err.message);\r\n            setLoading(false);\r\n            setData([]);\r\n          }\r\n        }\r\n      }\r\n    })();\r\n\r\n  \r\n\r\n    setIsUpdate(false);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel(\"Cancelled in cleanup\");\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    isUpdate,\r\n    currentPage,\r\n    category,\r\n    searchText,\r\n    invoice,\r\n    status,\r\n    zone,\r\n    time,\r\n    sortedField,\r\n    source,\r\n    limitData,\r\n    startDate,\r\n    endDate,\r\n  ]);\r\n\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useAsync;\r\n","import requests from \"./httpService\";\r\n\r\nconst ProductServices = {\r\n  getAllProducts: async ({ page, limit, category, title, price }) => {\r\n    const searchCategory = category !== null ? category : \"\";\r\n    const searchTitle = title !== null ? title : \"\";\r\n    const searchPrice = price !== null ? price : \"\";\r\n      let body ={\r\n        category:searchCategory,\r\n        title:searchTitle,\r\n        price:searchPrice,\r\n      }\r\n    return requests.post(\r\n      `/product/list?page=${page}&pageSize=${limit}`,body\r\n    );\r\n  },\r\n\r\n  getProductById: async (id) => {\r\n    return requests.get(`/product/${id}/data`);\r\n  },\r\n  addProduct: async (body) => {\r\n    return requests.post(\"/product/save\", body);\r\n  },\r\n  addAllProducts: async (body) => {\r\n    return requests.post(\"/products/all\", body);\r\n  },\r\n  updateProduct: async (id, body) => {\r\n    return requests.post(\"/product/save\", body);\r\n  },\r\n  updateManyProducts: async (body) => {\r\n    return requests.patch(\"products/update/many\", body);\r\n  },\r\n  updateStatus: async (id, body) => {\r\n    return requests.put(`/products/status/${id}`, body);\r\n  },\r\n\r\n  deleteProduct: async (id,body) => {\r\n    return requests.delete(`/product/${id}/delete`, body);\r\n  },\r\n  deleteManyProducts: async (body) => {\r\n    return requests.post(\"/product/multiple-delete\", body);\r\n  },\r\n};\r\n\r\nexport default ProductServices;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageTitle = ({ title, description }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>\r\n        {\" \"}\r\n        {title\r\n          ? ` ${title} | ecommerce : Point of Sale and E-Commerce Website all in one`\r\n          : \"ecommerce : Point of Sale and E-Commerce Website all in one\"}\r\n      </title>\r\n      <meta\r\n        name=\"description\"\r\n        content={\r\n          description\r\n            ? ` ${description} `\r\n            : \"ecommerce : Point of Sale and E-Commerce Website all in one\"\r\n        }\r\n      />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useContext } from \"react\";\r\nimport { Button } from \"@windmill/react-ui\";\r\nimport { AdminContext } from \"context/AdminContext\";\r\nimport useStaffSubmit from \"hooks/useStaffSubmit\";\r\nimport PageTitle from \"components/common/PageTitle\";\r\nimport LabelArea from \"components/form/LabelArea\";\r\nimport Uploader from \"components/image-uploader/Uploader\";\r\nimport InputArea from \"components/form/InputArea\";\r\nimport Error from \"components/form/Error\";\r\nimport SelectRole from \"components/form/SelectRole\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst EditProfile = () => {\r\n  const { t } = useTranslation();\r\n  const {\r\n    state: { adminInfo },\r\n  } = useContext(AdminContext);\r\n\r\n  const { register, handleSubmit, onSubmit, errors, imageUrl, setImageUrl } =\r\n    useStaffSubmit(adminInfo._id);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle> {t(\"EditProfile\")} </PageTitle>\r\n      <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfilePicture\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <Uploader\r\n                  imageUrl={imageUrl}\r\n                  setImageUrl={setImageUrl}\r\n                  folder=\"customer\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileName\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Your Name\"\r\n                />\r\n                <Error errorName={errors.name} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileEmail\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <Error errorName={errors.email} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileContactNumber\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Contact Number\"\r\n                  name=\"phone\"\r\n                  type=\"text\"\r\n                  placeholder=\"Contact Number\"\r\n                />\r\n                <Error errorName={errors.phone} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileYourRole\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <SelectRole register={register} label=\"Role\" name=\"role\" />\r\n                <Error errorName={errors.role} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row-reverse pr-6 pb-6\">\r\n            <Button type=\"submit\" className=\"h-12 px-6\">\r\n              {t(\"updateProfile\")}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import requests from \"./httpService\";\r\n\r\nconst SettingServices = {\r\n  // global setting all function\r\n  addGlobalSetting: async (body) => {\r\n    return requests.post(\"/setting/global/add\", body);\r\n  },\r\n\r\n  getGlobalSetting: async () => {\r\n    return requests.get(\"/setting/global/all\");\r\n  },\r\n\r\n  updateGlobalSetting: async (body) => {\r\n    return requests.put(`/setting/global/update`, body);\r\n  },\r\n    // multidelete Media\r\n  removeMultiDeleteMedia: async (body) => {\r\n    return requests.post(\"/image/multiple-delete\", body);\r\n  },\r\n};\r\n\r\nexport default SettingServices;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import requests from \"./httpService\";\r\n\r\nconst AdminServices = {\r\n  registerAdmin: async (body) => {\r\n    return requests.post(\"/signup\", body);\r\n  },\r\n\r\n  loginAdmin: async (body) => {\r\n    return requests.post(`/login`, body);\r\n  },\r\n\r\n  forgetPassword: async (body) => {\r\n    return requests.post(\"/forget-password\", body);\r\n  },\r\n\r\n  resetPassword: async (body) => {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n\r\n  signUpWithProvider: async (body) => {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n\r\n  addStaff: async (body) => {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff: async (body) => {\r\n    return requests.get(\"/admin\", body);\r\n  },\r\n  getStaffById: async (id, body) => {\r\n    return requests.post(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaff: async (id, body) => {\r\n    return requests.put(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaffStatus: async (id, body) => {\r\n    return requests.put(`/admin/update-status/${id}`, body);\r\n  },\r\n\r\n  deleteStaff: async (id) => {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\n\r\nexport default AdminServices;\r\n","import React from \"react\";\r\nimport { Input } from \"@windmill/react-ui\";\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n  min,\r\n  max\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        min={min}\r\n        max={max}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","export const ItemTypes = {\r\n  CARD: 'card',\r\n};\r\n","import { useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { ItemTypes } from \"./ItemTypes.js\";\r\n\r\nconst Card = ({ id, image, index, moveCard, handleRemoveImage }) => {\r\n  const ref = useRef(null);\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Time to actually perform the action\r\n      moveCard(dragIndex, hoverIndex);\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n  const [{}, drag] = useDrag({\r\n    type: ItemTypes.CARD,\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  drag(drop(ref));\r\n  return (\r\n    <div ref={ref} data-handler-id={handlerId}>\r\n      <div className=\"relative\">\r\n        <img\r\n          className=\"inline-flex border rounded-md border-gray-100 dark:border-gray-600 w-24 max-h-24 p-2 m-2\"\r\n          src={image?.preview}\r\n          alt=\"product\"\r\n        />\r\n        {index === 0 && (\r\n          <p className=\"text-xs absolute py-1 w-full bottom-0 inset-x-0 bg-blue-500 rounded-full text-white text-center \">\r\n            Default Image\r\n          </p>\r\n        )}\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"absolute top-0 right-0 text-red-500 focus:outline-none\"\r\n          onClick={() => handleRemoveImage(image)}\r\n        >\r\n          <FiXCircle />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import update from \"immutability-helper\";\r\nimport { useCallback } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Container = ({ setImageUrl, imageUrl, handleRemoveImage }) => {\r\n  const moveCard = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      setImageUrl((prevCards) =>\r\n        update(prevCards, {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, prevCards[dragIndex]],\r\n          ],\r\n        })\r\n      );\r\n    },\r\n    [setImageUrl]\r\n  );\r\n\r\n  const renderCard = useCallback(\r\n    (card, i) => {\r\n      return (\r\n        <Card\r\n          key={i + 1}\r\n          index={i}\r\n          id={card.id}\r\n          text={card.text}\r\n          moveCard={moveCard}\r\n          image={card}\r\n          handleRemoveImage={handleRemoveImage}\r\n        />\r\n      );\r\n    },\r\n    [moveCard, handleRemoveImage]\r\n  );\r\n  return <>{imageUrl.map((card, i) => renderCard(card, i))}</>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { t } from \"i18next\";\r\nimport axios from \"axios\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport cloudinary from \"cloudinary/lib/cloudinary\";\r\nimport { FiUploadCloud, FiXCircle } from \"react-icons/fi\";\r\n\r\n//internal import\r\nimport useAsync from \"hooks/useAsync\";\r\nimport SettingServices from \"services/SettingServices\";\r\nimport { notifyError, notifySuccess } from \"../../utils/toast\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport Container from \"./Container\";\r\nimport ProductServices from \"services/ProductServices\";\r\n\r\ncloudinary.config({\r\n  cloud_name: process.env.REACT_APP_CLOUD_NAME,\r\n  api_key: process.env.REACT_APP_CLOUDINARY_API_KEY,\r\n  api_secret: process.env.REACT_APP_CLOUDINARY_API_SECRET,\r\n});\r\n\r\nconst Uploader = ({ setImageUrl, imageUrl, product, folder, method,id }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setError] = useState(\"\");\r\n  const [selectedImages, setSelectedImages] = useState([])\r\n  const [productsDetails, setProductsDetails] = useState()\r\n\r\n  const { data: globalSetting } = useAsync(SettingServices.getGlobalSetting);\r\n\r\n  // console.log(\"data\", data);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (id) {\r\n          const res = await ProductServices.getProductById(id);\r\n          setProductsDetails(res.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching product details:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n  const { getRootProps, getInputProps, fileRejections } = useDropzone({\r\n    accept: \"image/*\",\r\n    multiple: product ? true : false,\r\n    maxSize: 500000,\r\n    maxFiles: globalSetting?.number_of_image_per_product || 3,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (fileRejections) {\r\n  //     fileRejections.map(({ file, errors }) => (\r\n  //       <li key={file.path}>\r\n  //         {file.path} - {file.size} bytes\r\n  //         <ul>\r\n  //           {errors.map((e) => (\r\n  //             <li key={e.code}>\r\n  //               {e.code === \"too-many-files\"\r\n  //                 ? notifyError(\r\n  //                     `Maximum ${globalSetting?.number_of_image_per_product} Image Can be Upload!`\r\n  //                   )\r\n  //                 : notifyError(e.message)}\r\n  //             </li>\r\n  //           ))}\r\n  //         </ul>\r\n  //       </li>\r\n  //     ));\r\n  //   }\r\n\r\n  //   if (files) {\r\n  //     console.log(\"files\",files)\r\n  //     files?.forEach((file) => {\r\n  //       if (\r\n  //         product &&\r\n  //         imageUrl?.length + files?.length >\r\n  //           globalSetting?.number_of_image_per_product\r\n  //       ) {\r\n  //         return notifyError(\r\n  //           `Maximum ${globalSetting?.number_of_image_per_product} Image Can be Upload!`\r\n  //         );\r\n  //       }\r\n\r\n  //       setLoading(true);\r\n  //       setError(\"Uploading....\");\r\n\r\n  //       if (product) {\r\n  //         const result = imageUrl?.find(\r\n  //           (img) => img === `${process.env.REACT_APP_CLOUDINARY_URL}`\r\n  //         );\r\n\r\n  //         if (result) return setLoading(false);\r\n  //       }\r\n\r\n  //       const name = file.name.replaceAll(/\\s/g, \"\");\r\n  //       const public_id = name?.substring(0, name.lastIndexOf(\".\"));\r\n\r\n  //       const formData = new FormData();\r\n  //       console.log(\"file\",file)\r\n  //       console.log(\"process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET\",process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET)\r\n  //       console.log(\"process.env.REACT_APP_CLOUD_NAME\",process.env.REACT_APP_CLOUD_NAME)\r\n  //       console.log(\"folder\",folder)\r\n  //       console.log(\"public_id\",public_id)\r\n  //       formData.append(\"file\", file);\r\n  //       // formData.append(\r\n  //       //   \"upload_preset\",\r\n  //       //   process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET\r\n  //       // );\r\n  //       // formData.append(\"cloud_name\", process.env.REACT_APP_CLOUD_NAME);\r\n  //       formData.append(\"folder\", folder);\r\n  //       formData.append(\"public_id\", public_id);\r\n\r\n  //       axios({\r\n  //         url: process.env.REACT_APP_CLOUDINARY_URL,\r\n  //         method: \"POST\",\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n  //         },\r\n  //         data: formData,\r\n  //       })\r\n  //         .then((res) => {\r\n  //           notifySuccess(\"Image Uploaded successfully!\");\r\n  //           setLoading(false);\r\n  //           if (product) {\r\n  //             setImageUrl((imgUrl) => [...imgUrl, res.data.secure_url]);\r\n  //           } else {\r\n  //             setImageUrl(res.data.secure_url);\r\n  //           }\r\n  //         })\r\n  //         .catch((err) => {\r\n  //           console.error(\"err\", err);\r\n  //           notifyError(err.Message);\r\n  //           setLoading(false);\r\n  //         });\r\n  //     });\r\n  //   }\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [files]);\r\n\r\n  useEffect(()=>{    \r\n    console.log(imageUrl)\r\n    console.log(files)\r\n    files.map((element, index) => (\r\n      setImageUrl((imgUrl) => [...imgUrl, element])\r\n      ));\r\n  },[files])\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name}>\r\n      <div>\r\n        <img\r\n          className=\"inline-flex border-2 border-gray-100 w-24 max-h-24\"\r\n          src={file.preview}\r\n          alt={file.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleRemoveImage = async (img) => {\r\n    if(id){\r\n      let index = productsDetails?.images?.findIndex((x)=>x.name === img)\r\n      console.log(index)\r\n      if(index != -1){\r\n        const updatedImageUrl = [...imageUrl];\r\n        updatedImageUrl.splice(index, 1);\r\n        setImageUrl(updatedImageUrl)\r\n        let data = new FormData();\r\n        data.append('category_images', '');  // Add the appropriate value for 'category_images'\r\n        data.append('product_images', `${productsDetails?.images[index].id}`); \r\n        const res = await SettingServices.removeMultiDeleteMedia(data);\r\n        // setProductsDetails(res.data);\r\n        notifyError(\r\n              res.status_code === 200 ? \"Image delete successfully!\" : res.result\r\n            );\r\n\r\n      }\r\n    }else{\r\n      let index = imageUrl.findIndex((x)=> x === img)\r\n      console.log(index)\r\n      if(index != -1){\r\n        const updatedImageUrl = [...imageUrl];\r\n        updatedImageUrl.splice(index, 1);\r\n        setImageUrl(updatedImageUrl)\r\n      }\r\n    }\r\n\r\n    // try {\r\n    //   // const url = img.substring(img.length - 25);\r\n    //   const url = img.split(\"/\").pop().split(\".\")[0];\r\n    //   console.log(url)\r\n    //   const public_id = `${folder}/${url}`;\r\n\r\n    //   const res = await cloudinary.v2.uploader.destroy(public_id);\r\n\r\n    //   setLoading(false);\r\n    //   notifyError(\r\n    //     res.result === \"ok\" ? \"Image delete successfully!\" : res.result\r\n    //   );\r\n    //   if (product) {\r\n    //     const result = imageUrl?.filter((i) => i !== img);\r\n    //     setImageUrl(result);\r\n    //   } else {\r\n    //     setImageUrl(\"\");\r\n    //   }\r\n    // } catch (err) {\r\n    //   console.error(\"err\", err);\r\n    //   notifyError(err.Message);\r\n    //   setLoading(false);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full text-center\">\r\n      <div\r\n        className=\"border-2 border-gray-300 dark:border-gray-600 border-dashed rounded-md cursor-pointer px-6 pt-5 pb-6\"\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <span className=\"mx-auto flex justify-center\">\r\n          <FiUploadCloud className=\"text-3xl text-green-500\" />\r\n        </span>\r\n        <p className=\"text-sm mt-2\">{t(\"DragYourImage\")}</p>\r\n        <em className=\"text-xs text-gray-400\">{t(\"imageFormat\")}</em>\r\n      </div>\r\n\r\n      <div className=\"text-green-500\">{loading && err}</div>\r\n     \r\n      <aside className=\"flex flex-row flex-wrap mt-4\">\r\n        {product ? (\r\n          <DndProvider backend={HTML5Backend}>\r\n            <Container\r\n              setImageUrl={setImageUrl}\r\n              imageUrl={imageUrl}\r\n              handleRemoveImage={handleRemoveImage}\r\n            />\r\n          </DndProvider>\r\n        ) : !product && imageUrl ? (\r\n          <div className=\"relative\">\r\n            {\" \"}\r\n            <img\r\n              className=\"inline-flex border rounded-md border-gray-100 dark:border-gray-600 w-24 max-h-24 p-2\"\r\n              src={imageUrl}\r\n              alt=\"product\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"absolute top-0 right-0 text-red-500 focus:outline-none\"\r\n              onClick={() => handleRemoveImage(imageUrl)}\r\n            >\r\n              <FiXCircle />\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          thumbs\r\n        )}\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n","import React from 'react';\r\nimport { Select } from '@windmill/react-ui';\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Staff role\r\n        </option>\r\n        <option value=\"Admin\">Admin</option>\r\n        <option value=\"CEO\">CEO</option>\r\n        <option value=\"Manager\">Manager</option>\r\n        <option value=\"Accountant\">Accountant</option>\r\n        <option value=\"Driver\"> Driver </option>\r\n        <option value=\"Security Guard\">Security Guard</option>\r\n        <option value=\"Deliver Person\">Delivery Person</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import dayjs from \"dayjs\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport { AdminContext } from \"context/AdminContext\";\r\nimport { SidebarContext } from \"context/SidebarContext\";\r\nimport AdminServices from \"services/AdminServices\";\r\nimport { notifyError, notifySuccess } from \"utils/toast\";\r\n\r\nconst useStaffSubmit = (id) => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n  const { isDrawerOpen, closeDrawer, setIsUpdate, lang } =\r\n    useContext(SidebarContext);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    dayjs(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [language, setLanguage] = useState(lang);\r\n  const [resData, setResData] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setIsSubmitting(true);\r\n\r\n      const staffData = {\r\n        name: {\r\n          [language]: data.name,\r\n        },\r\n        email: data.email,\r\n        password: data.password,\r\n        phone: data.phone,\r\n        role: data.role,\r\n        joiningDate: selectedDate\r\n          ? selectedDate\r\n          : dayjs(new Date()).format(\"YYYY-MM-DD\"),\r\n        image: imageUrl,\r\n        lang: language,\r\n      };\r\n\r\n      if (id) {\r\n        // console.log('id is ',id)\r\n        const res = await AdminServices.updateStaff(id, staffData);\r\n        setIsUpdate(true);\r\n        setIsSubmitting(false);\r\n        notifySuccess(res.message);\r\n        closeDrawer();\r\n      } else {\r\n        const res = await AdminServices.addStaff({ staffData });\r\n        setIsUpdate(true);\r\n        setIsSubmitting(false);\r\n        notifySuccess(res.message);\r\n        closeDrawer();\r\n      }\r\n    } catch (err) {\r\n      notifyError(err ? err?.response?.data?.message : err?.message);\r\n      setIsSubmitting(false);\r\n      closeDrawer();\r\n    }\r\n  };\r\n\r\n  const getStaffData = async () => {\r\n    try {\r\n      const res = await AdminServices.getStaffById(id, {\r\n        email: adminInfo.email,\r\n      });\r\n      if (res) {\r\n        setResData(res);\r\n        setValue(\"name\", res.name[language ? language : \"en\"]);\r\n        setValue(\"email\", res.email);\r\n        setValue(\"password\");\r\n        setValue(\"phone\", res.phone);\r\n        setValue(\"role\", res.role);\r\n        setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\r\n        setImageUrl(res.image);\r\n      }\r\n    } catch (err) {\r\n      notifyError(err ? err?.response?.data?.message : err?.message);\r\n    }\r\n  };\r\n\r\n  const handleSelectLanguage = (lang) => {\r\n    setLanguage(lang);\r\n\r\n    if (Object.keys(resData).length > 0) {\r\n      setValue(\"name\", resData.name[lang ? lang : \"en\"]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isDrawerOpen) {\r\n      setResData({});\r\n      setValue(\"name\");\r\n      setValue(\"email\");\r\n      setValue(\"password\");\r\n      setValue(\"phone\");\r\n      setValue(\"role\");\r\n      setValue(\"joiningDate\");\r\n      setImageUrl(\"\");\r\n      clearErrors(\"name\");\r\n      clearErrors(\"email\");\r\n      clearErrors(\"password\");\r\n      clearErrors(\"phone\");\r\n      clearErrors(\"role\");\r\n      clearErrors(\"joiningDate\");\r\n      setImageUrl(\"\");\r\n      setLanguage(lang);\r\n      setValue(\"language\", language);\r\n      return;\r\n    }\r\n    if (id) {\r\n      getStaffData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\")) {\r\n      getStaffData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname, setValue]);\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    language,\r\n    errors,\r\n    setImageUrl,\r\n    imageUrl,\r\n    selectedDate,\r\n    setSelectedDate,\r\n    isSubmitting,\r\n    handleSelectLanguage,\r\n  };\r\n};\r\n\r\nexport default useStaffSubmit;\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst instance = axios.create({\r\n  baseURL:`https://backend.kingsmankids.com/api`, //`https://backend.canadasentinel.ca/api`,\r\n  timeout: 50000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get('adminInfo')) {\r\n    adminInfo = JSON.parse(Cookies.get('adminInfo'));\r\n  }\r\n\r\n  let company;\r\n\r\n  if (Cookies.get('company')) {\r\n    company = Cookies.get('company');\r\n  }\r\n\r\n  // console.log('Admin Http Services Cookie Read : ' + company);\r\n  // let companyName = JSON.stringify(company);\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n      company: company ? company : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url, body) => instance.delete(url, body).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n"],"sourceRoot":""}